<!doctype html><html><head><meta charset="utf-8" /><meta name="description" content="JavaScript boolean objects and boolean primitives may appear to be the same but they differ in many ways. This article outlines the differences between them." /><title>JavaScript Boolean objects vs. boolean primitives - Dive Into JavaScript</title><link rel="stylesheet" media="screen" type="text/css" href="http://static.diveintojavascript.com/theme/v2/style/default.css" /></head><body><div id="d"><div id="p" class="ac"><div id="lc"><div id="c"><div id="h"><h3 id="sn"><a href="../index.html">Dive Into JavaScript</a></h3></div><div id="b"><h1>JavaScript Boolean objects vs. boolean primitives</h1><div class="entry-intro"><p><code>Boolean</code> objects and boolean primitives in JavaScript may appear to be the same but they differ in many ways. This article outlines the differences between them.</p></div><p><code>Boolean</code> objects and boolean primitives are not the same thing and should not be used interchangeably. Paradoxically, their <strong>truth value may differ</strong>. Consider the following example:</p><pre>var hope_exists = new Boolean(false);
if (hope_exists) {
    // do something
}</pre><p>Apparently, <code>hope_exists</code> should be evaluated to false. However, the <code>new Boolean()</code> constructor creates an object, and any object is converted to <code>true</code>:</p><pre>Boolean(hope_exists); // true</pre><p>In a <strong>boolean context</strong>, objects are evaluated to the value of true.</p><p>However, that's not the case with the equality operators:</p><pre>hope_exists == true; // false</pre><p>In a <strong>comparison operation</strong>, a boolean operand is converted to a number. An object operand, on the other hand, is converted to a primitive value using the <code>valueOf</code> and <code>toString</code> methods. That may result in a string, a number value or, in the case of a <code>Boolean</code> object, a boolean primitive:</p><pre>hope_exists.valueOf(); // false
Number(true); // 1</pre><p>What really happens here is <code>hope_exists</code> is converted to the boolean value of <code>false</code>, which in turn is converted to the number <code>0</code>, which is not equal to <code>1</code>.</p><p>Knowing this, we can now achieve the desired result by converting the <code>Boolean</code> object to a boolean primitive:</p><pre>hope_exists > 0; // false</pre><p>As a rule of thumb, <b>never use a <code>Boolean</code> object when you mean <code>true</code> or <code>false</code></b>.</p><p>So there is hope, but that's up to the programmer.</p><h2>See also</h2><ul><li><a href="../core-javascript-reference/the-boolean-object">The JavaScript <code>Boolean</code> object</a></li></ul><div class="contact-note"><p>If you see a typo, want to make a suggestion or have anything in particular you'd like to know more about, please drop us an e-mail at <a href="mailto:hello at diveintojavascript dot com">hello at diveintojavascript dot com</a>.</p></div></div><div id="f"><div class="copy-notice"><p>Copyright &copy; 2010-2011 Dive Into JavaScript</p></div></div></div></div><div id="rc"><div id="s"><script>google_ad_client="pub-4089529313925168";google_ad_slot="5129818829";google_ad_width=300;google_ad_height=250;</script><script src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script><div class="block"><div class="head"><h3>JavaScript Tools</h3></div><div class="body"><ul><!--li><a href="/tools/javascript-minifier-packer-compressor-compiler">JavaScript Minifier/Packer/Compressor/Compiler</a></li--><li><a href="../tools/javascript-regular-expressions-toolkit">JavaScript Regular Expressions Toolkit</a></li></ul></div></div><div class="block"><div class="head"><h3>Projects</h3></div><div class="body"><ul><li><a href="../projects/javascript-sprintf">JavaScript sprintf()</a></li><li><a href="../projects/sidjs-load-javascript-and-stylesheets-on-demand">SidJS - JavaScript and CSS Lazy Loader</a></li></ul></div></div><div class="block"><div class="head"><h3>Articles</h3></div><div class="body"><ul><li><a href="javascript-regular-expressions">JavaScript Regular Expressions</a></li><li><a href="javascript-boolean-objects-vs-boolean-primitives">JavaScript Boolean objects vs. boolean primitives</a></li></ul></div></div><div class="block"><div class="head"><h3>Tutorials</h3></div><div class="body"><ul><li><a href="../tutorials/web-storage-tutorial-creating-an-address-book-application">JavaScript Web Storage Tutorial: Creating an Address Book Application</a></li></ul></div></div><div class="block"><div class="head"><h3>JavaScript APIs</h3></div><div class="body"><ul><li><a href="../javascript-apis/web-storage-dom-storage">Web Storage (DOM Storage)</a></li></ul></div></div><div class="block"><div class="head"><h3>JavaScript Core Reference</h3></div><div class="body"><h4>Global objects</h4><ul><li><a href="../core-javascript-reference/the-array-object">Array</a></li><li><a href="../core-javascript-reference/the-boolean-object">Boolean</a></li><li>Date</li><li>Error</li><li>Function</li><li><a href="../core-javascript-reference/the-math-object">Math</a></li><li><a href="../core-javascript-reference/the-number-object">Number</a></li><li><a href="../core-javascript-reference/the-object-object">Object</a></li><li><a href="../core-javascript-reference/the-regexp-object">RegExp</a></li><li><a href="../core-javascript-reference/the-string-object">String</a></li></ul><h4>Global properties</h4><ul><li><a href="../core-javascript-reference/the-infinity-property">Infinity</a></li><li><a href="../core-javascript-reference/the-nan-property">NaN</a></li><li><a href="../core-javascript-reference/the-undefined-property">undefined</a></li></ul><h4>Global functions</h4><ul><li><a href="../core-javascript-reference/the-decodeuri-function">decodeURI</a></li><li><a href="../core-javascript-reference/the-decodeuricomponent-function">decodeURIComponent</a></li><li><a href="../core-javascript-reference/the-encodeuri-function">encodeURI</a></li><li><a href="../core-javascript-reference/the-encodeuricomponent-function">encodeURIComponent</a></li><li>eval</li><li><a href="../core-javascript-reference/the-isfinite-function">isFinite</a></li><li><a href="../core-javascript-reference/the-isnan-function">isNaN</a></li><li><a href="../core-javascript-reference/the-parsefloat-function">parseFloat</a></li><li><a href="../core-javascript-reference/the-parseint-function">parseInt</a></li></ul></div></div><div class="block"><div class="body"><div style="text-align: center;"><a href="http://www.webfaction.com/?affiliate=alexei"><img src="http://www.webfaction.com/banners/webfaction-240x60-python-ruby-php-bg.png" alt="WebFaction - Agile hosting, fast and reliable servers" class="banner" /></a></div></div></div></div></div></div></div><script>var _gaq=_gaq||[];_gaq.push(['_setAccount','UA-16425630-1']);_gaq.push(['_trackPageview']);(function(){var ga=document.createElement('script');ga.type='text/javascript';ga.async=true;ga.src=('https:'==document.location.protocol?'https://ssl':'http://www')+'.google-analytics.com/ga.js';var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga,s);})();</script></body></html>
